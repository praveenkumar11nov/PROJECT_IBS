package com.bcits.bfm.service.billingCollectionManagement;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletResponse;

import com.bcits.bfm.model.BillingPaymentsEntity;
import com.bcits.bfm.model.ElectricityBillEntity;
import com.bcits.bfm.model.PaymentAdjustmentEntity;
import com.bcits.bfm.model.PaymentSegmentCalcLines;
import com.bcits.bfm.model.PaymentSegmentsEntity;
import com.bcits.bfm.service.GenericService;

public interface PaymentService extends GenericService<BillingPaymentsEntity> {

	List<BillingPaymentsEntity> findAll();

	void setCollectionPaymentStatus(int paymentCollectionId, String operation, HttpServletResponse response);

	void paymentStatusUpdate(int paymentCollectionId,
			HttpServletResponse response);

	List<?> getAllAccuntNumbers();

	List<?> getConsolidatedAmount();

	List<BillingPaymentsEntity> getPaymentCollectionID();

	List<PaymentSegmentsEntity> getPaymentSegmentsList(int paymentCollectionId);

	List<PaymentSegmentCalcLines> getPaymentSegmentCalcLinesList(int paymentSegmentId,String transactionCode);

	void setStatusPostedLedger(int paymentCollectionId,HttpServletResponse response);

	void setStatusApproved(HttpServletResponse response);

	List<?> getListOfServicesAmounts(int accountId);

	void setBillEntityStatus(int accountId,String billReferenceNo,String operation,HttpServletResponse response);

	List<?> accountNumberBasedOnPayDeposit();

	List<?> getConsolidatedAmountBasedOnDeposit();

	List<?> accountNumberBasedOnPayAdvanceBill();

	List<?> getConsolidatedAmountBasedOnPayAdvance();

	List<PaymentSegmentCalcLines> getPaymentSegmentCalcLinesListForDepositType(int paymentSegmentId);

	void setAdvanceBillEntityStatus(int accountId,String abBillNo,String operation,HttpServletResponse response);

	void cancelPaymentsNotPosted(HttpServletResponse response);

	Set<String> commonFilterForAccountNumbersUrl();

	List<?> findPersonForFilters();

	List<?> getAllReconciliations();

	List<Integer> checkForNotPostedPaymentsAccounts(int accountId,String paymentType, String typeOfService);

	BillingPaymentsEntity getPamentDetals(int accountId, java.sql.Date fromDate);

     Long getListBasedOnStatus(String className, String attribute,
			String attribute1);

	Double getExcessAmount(int accountId, java.sql.Date fromDate);

	List<?> latePaymentAmount(int accountId, Date receiptDate, String typeOfService);

	List<PaymentSegmentCalcLines> getPaymentSegmentCalcLinesListWithLatePayment(
			int paymentSegmentId);

	List<?> getAllPaymentDetail();

	List<?> getAllBillPaymentDetail(Date monthToShow);

	List<?> getAllBillDetailsWithoutmonth();

	List<?> getAllDepositDetails();

	List<?> getAllPaymentDetailforPaymentGateway();

	List<?> getAllBillPaymentDetailAccountWise(Date monthToShow);

	List<?> getAllPaymentDetailforOtherServices();

	List<BillingPaymentsEntity> getPaymentDataBasedOnMonth(int montOne, int year);

	List<?> getAllOpenResidentInvoice(Date monthToShow);

	List<?> getAllOpenPaymentDueData(Date monthToShow);

	List<?> getAllPropertyNo();

	void setDepositBillEntityStatus(int accountId,String billReferenceNo,String operation,HttpServletResponse response);

	List<?> getAllAccuntNumbersBasedOnProperty(int propertyId);

	List<BillingPaymentsEntity> searchPaymentDataByMonth(Date fromDateVal,Date toDateVal);

	int autoGeneratedReceiptNoNumber();

	List<?> getConsolidatedAmountBasedOnServiceType(String serviceType,int accountId);

	List<BillingPaymentsEntity> getAllRecordsForCAM(Date fromMonth);
	
	public void upDateTallyStatus(int paymentCollectionId,String tallyStatus);

	List<PaymentAdjustmentEntity> getFiftyRecordsForTally(Date monthDate);

	List<BillingPaymentsEntity> getFiftyRecordsPaymentsForTally(Date monthDate);
}

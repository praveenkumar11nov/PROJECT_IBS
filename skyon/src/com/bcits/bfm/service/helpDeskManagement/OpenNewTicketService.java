package com.bcits.bfm.service.helpDeskManagement;

import java.util.List;

import javax.servlet.http.HttpServletResponse;

import com.bcits.bfm.model.OpenNewTicketEntity;
import com.bcits.bfm.model.OwnerProperty;
import com.bcits.bfm.model.Person;
import com.bcits.bfm.model.TenantProperty;
import com.bcits.bfm.service.GenericService;

public interface OpenNewTicketService extends  GenericService<OpenNewTicketEntity> {

	List<OpenNewTicketEntity> findAllData();
	List<OpenNewTicketEntity> findALL();
	
	List<Object[]> findALLTicket();

	void ticketStatusUpdateFromInnerGrid(int ticketId,HttpServletResponse response);

	List<OwnerProperty> findAllPropertyPersonOwnerList();
	
	List<TenantProperty> findAllPropertyPersonTenantList();

	Person getPersons(int personId);

	String getDepartements(int dept_Id);

	List<OpenNewTicketEntity> findAllTicketsBasedOnDept(int dept_Id,int urId);

	void departementTicketAcceptanceStatusAsAccept(int ticketId,HttpServletResponse response);

	void departementTicketAcceptanceStatusAsReject(int ticketId,HttpServletResponse response);

	String ticketStatusUpdateAsClose(int ticketId, HttpServletResponse response);

	void updateAssignTicketDate(int ticketId);

	void lastResponseDateUpdate(int ticketId);

	List<?> findAllTicketsBasedOnResponseTime();

	void updateTicketStatusAsAssigned(int ticketId);

	List<OpenNewTicketEntity> findAllTicketsBasedOnUrId(int urId);

	List<String> getRoleName(int urId);

	List<?> findPersonForFilters();

	List<?> selectDistinctQuery(String className, String relationObject,String attribute);

	List<Integer> getPersonsList(int deptId);

	List<String> getAllBlockNames();

	List<?> findPropertyNames();

	List<?> getTowerNames();

	String getUrLoginNameBasedOnMailId(String email);

	List<OpenNewTicketEntity> findALLForPerson(int personId);
	
	List<?> findCloseTicketReports();
	
	List<?> findAllTicketReports();
	
	List<?> findOpenTicketReports();
	
	List<?> findClosedOnBehalf();
	
	List<?> findOpenOnBehalf();
	
	List<?> findAllPersonalOpenTicket();
	
	List<?> findAllClosedPersonalTicket();
	
	List<?> findTicketSummary();
	
	String getTopicNameBasedOnTopicId(int topicId);
	
	Object[] getPersonNameBasedOnPersonId(int personId);

	int getUserIdBasedOnPersonId(int personId);

	Object[] getPropertyDataBasedOnPropertyId(int propertyId);

	int autoGeneratedTicketNumber();
	List<OpenNewTicketEntity> getOpenNewTicketSearchByMonth(java.util.Date fromDate,java.util.Date toDate);
	
}
